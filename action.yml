name: Build and push multi platform docker images
description: Build and push multi platform docker images
branding:
  icon: "box"
  color: "blue"

inputs:
  docker-args:
    description: "Additional arguments to pass to the docker build command"
    default: ""
    required: false
    type: list

  docker-context:
    description: "The context to use for the docker build"
    default: "."
    required: false
    type: string

  docker-file:
    description: "The path to the Dockerfile to use for the build"
    required: true
    type: string

  docker-registry:
    description: "The registry to push the image to. Example: ghcr.io/example"
    required: true
    type: string

  github-token:
    description: "The GitHub token to use for authentication"
    required: true
    type: string

  image-name:
    description: "The name of the image to build and push. Example my-app"
    required: true
    type: string

  platform:
    description: "The platform(s) to build the image for. Example: linux/arm64,linux/amd64"
    default: ""
    required: false
    type: string

  tag:
    description: "The tag to apply to the image. Example: 1.2.3"
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Create build variables
      shell: bash
      run: echo 'image-ref=${{ inputs.docker-registry }}/${{ inputs.image-name }}:${{ inputs.tag }}' >> $GITHUB_ENV

    - name: QEMU Setup
      uses: docker/setup-qemu-action@v3

    - name: Builders
      shell: bash
      run: docker context create builders

    - name: Buildx Setup
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        endpoint: builders

    - name: Login to GitHub Packages
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker-registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Build Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker-context }}
        platforms: ${{ inputs.platform }}
        tags: ${{ env.image-ref }}
        push: true
        file: ${{ inputs.docker-file }}
        provenance: false
        build-args: |
          GitHubPackagesAccessToken=${{ inputs.github-token }}
          ${{ inputs.docker-args }}
